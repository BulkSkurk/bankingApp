
public class Main {
    public static void main(String[] args){

        UserInterface userInterface = new UserInterface();
        userInterface.startUserInterface(args);
        //Great progress today 03/09. Keep at it like this.
        //Inhuman progress at 08/09. Keep at it like this. Almost done.
    }
}
//TODO - Kom ih친g kriterierna!

//Kvar att g칬ra:
//TODO - Koppla p친 Save-knappen (Save fungerar, bara inte knappen)
//TODO - Remove Transaction funktionen
//TODO - Filter Funktion (Inkomst vs Utgifter, l칛gg till filter p친 existerande filterfunktioner)
//TODO - G칬r Unit-tests
//TODO - Snygga till UI med lite f칛rg
//DONE - Sedan klar. 游볙

//Krav f칬r G:
//
//- F칬lj instruktionerna i beskrivningen
//- Formatera koden: sm친 misstag ignoreras men st칬rre fel ger IG (om du blir os칛ker s친 kan du fr친ga l칛raren)
//
//Krav f칬r VG (g칬r minst en av f칬ljande punkter):
//
//- Spara och ladda all data till och fr친n fil
//
//- Bygg applikationen med ett user-interface (UI)
//
//- Skriv fem unit-tester
//Beskrivning
//Bygg en personal-finance applikation som fungerar i terminalen (eller med UI f칬r VG). I applikationen skall man kunna g칬ra f칬ljande:
//
//- L칛gga in transaktioner (manuellt; n칛r du exempelvis har k칬pt n친got eller f친tt l칬n)
//- Radera transaktioner (manuellt)
//- Se nuvarande kontobalans
//- Se pengar spenderade 친rsvis, m친nadsvis, veckovis och dagvis
//- Se inkomst 친rsvis, m친nadsvis, veckovis och dagvis
//Om du inte g친r f칬r VG s친 beh칬ver ingen data sparas. Det betyder att du m친ste b칬rja om med att l칛gga in transaktioner och annat varje g친ng applikationen startas om.
